Terminals which are not used

   "invalid character"
   "unterminated comment"
   "unterminated quote"


State 24 conflicts: 1 shift/reduce
State 43 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "end-of-file"

    1 program: "`program`" program_head decls compound_statement "`.`"

    2 program_head: "identifier" "`(`" identifier_list "`)`" "`;`"

    3 identifier_list: identifier_list "`,`" "identifier"
    4                | "identifier"

    5 compound_statement: "`begin`" statement_list

    6 decls: decls decl
    7      | /* empty */

    8 decl: var_decl
    9     | const_decl
   10     | type_decl
   11     | subprogram_decl
   12     | error "`;`"

   13 const_decl: "`const`" const_definitions

   14 const_definitions: const_definitions const_definition
   15                  | const_definition
   16                  | const_definitions error "`;`"
   17                  | error "`;`"

   18 const_definition: "identifier" "`=`" const_expression "`;`"

   19 var_decl: "`var`" var_expressions_semi

   20 var_expressions_semi: var_expressions_semi var_expressions "`;`"
   21                     | var_expressions "`;`"
   22                     | var_expressions_semi error "`;`"
   23                     | error "`;`"

   24 var_expressions: var_expressions "`,`" var_expression
   25                | var_expression

   26 var_expression: identifier_list "`:`" type_identifier

   27 type_decl: "`type`" type_expressions

   28 type_expressions: type_expressions type_expression
   29                 | type_expression
   30                 | type_expressions error "`;`"
   31                 | error "`;`"

   32 type_expression: "identifier" "`=`" type_identifier "`;`"

   33 subprogram_decl: subprogram

   34 subprogram: subprogram_header subprogram_body

   35 subprogram_header: "`function`" "identifier" "`(`" parameter_list "`)`" "`:`" return_type "`;`"
   36                  | "`procedure`" "identifier" "`(`" parameter_list "`)`" "`;`"
   37                  | "`function`" error "`;`"
   38                  | "`procedure`" error "`;`"

   39 subprogram_body: decls compound_statement "`;`"
   40                | "`forward`" "`;`"
   41                | error "`;`"

   42 parameter_list: var_expressions
   43               | /* empty */

   44 statement_list: statement_list_ statement "`end`"
   45               | statement "`end`"
   46               | error "`end`"
   47               | "`end`"

   48 statement_list_: statement_list_ statement "`;`"
   49                | statement "`;`"
   50                | statement_list_ error "`;`"
   51                | error "`;`"

   52 statement: "identifier" subscripts "`:=`" expression
   53          | "identifier" "`(`" expression_list "`)`"
   54          | if_statement
   55          | compound_statement
   56          | while_statement
   57          | for_statement

   58 if_statement: "`if`" expression "`then`" statement
   59             | "`if`" expression "`then`" statement "`else`" statement

   60 while_statement: "`while`" expression "`do`" statement

   61 for_statement: "`for`" "identifier" subscripts "`:=`" expression "`to`" expression "`do`" statement
   62              | "`for`" "identifier" subscripts "`:=`" expression "`downto`" expression "`do`" statement

   63 expression_list: expression_list_
   64                | /* empty */

   65 expression_list_: expression_list_ "`,`" expression
   66                 | expression

   67 expression: expression "`=`" simple_expression
   68           | expression "`<>`" simple_expression
   69           | expression "`>=`" simple_expression
   70           | expression "`>`" simple_expression
   71           | expression "`<=`" simple_expression
   72           | expression "`<`" simple_expression
   73           | simple_expression

   74 simple_expression: simple_expression "`+`" term
   75                  | simple_expression "`-`" term
   76                  | term

   77 term: term "`*`" factor
   78     | term "`/`" factor
   79     | term "`div`" factor
   80     | term "`mod`" factor
   81     | term "`and`" factor
   82     | factor

   83 factor: "`+`" factor
   84       | "`-`" factor
   85       | "`not`" factor
   86       | lower_factor

   87 lower_factor: "identifier" subscripts
   88             | "identifier" "`(`" expression_list "`)`"
   89             | real
   90             | "string literal"
   91             | "`(`" expression "`)`"

   92 subscripts: subscripts_
   93           | /* empty */

   94 subscripts_: subscripts_ "`[`" expression "`]`"
   95            | subscripts_ "`.`" "identifier"
   96            | "`[`" expression "`]`"
   97            | "`.`" "identifier"

   98 type_identifier: "identifier"
   99                | "`array`" "`[`" array_dim_expression "`..`" array_dim_expression "`]`" "`of`" type_identifier
  100                | "`record`" var_expressions_semi "`end`"

  101 const_expression: real
  102                 | "identifier"
  103                 | "string literal"
  104                 | "`-`" real
  105                 | "`-`" "identifier"

  106 array_dim_expression: "integer literal"
  107                     | "identifier"
  108                     | "`-`" "integer literal"
  109                     | "`-`" "identifier"

  110 real: "integer literal"
  111     | "real decimal literal"
  112     | "real exp literal"

  113 return_type: "identifier"


Terminals, with rules where they appear

"end-of-file" (0) 0
error (256) 12 16 17 22 23 30 31 37 38 41 46 50 51
"`and`" (258) 81
"`begin`" (259) 5
"`const`" (260) 13
"`div`" (261) 79
"`do`" (262) 60 61 62
"`downto`" (263) 62
"`else`" (264) 59
"`array`" (265) 99
"`end`" (266) 44 45 46 47 100
"`for`" (267) 61 62
"`forward`" (268) 40
"`function`" (269) 35 37
"`if`" (270) 58 59
"`mod`" (271) 80
"`not`" (272) 85
"`of`" (273) 99
"`program`" (274) 1
"`procedure`" (275) 36 38
"`record`" (276) 100
"`then`" (277) 58 59
"`to`" (278) 61
"`type`" (279) 27
"`var`" (280) 19
"`while`" (281) 60
"identifier" (282) 2 3 4 18 32 35 36 52 53 61 62 87 88 95 97 98 102
    105 107 109 113
"string literal" (283) 90 103
"`:=`" (284) 52 61 62
"integer literal" (285) 106 108 110
"real decimal literal" (286) 111
"real exp literal" (287) 112
"`=`" (288) 18 32 67
"`<>`" (289) 68
"`>=`" (290) 69
"`>`" (291) 70
"`<`" (292) 72
"`<=`" (293) 71
"`+`" (294) 74 83
"`-`" (295) 75 84 104 105 108 109
"`*`" (296) 77
"`/`" (297) 78
"`..`" (298) 99
"`.`" (299) 1 95 97
"`,`" (300) 3 24 65
"`;`" (301) 2 12 16 17 18 20 21 22 23 30 31 32 35 36 37 38 39 40 41
    48 49 50 51
"`(`" (302) 2 35 36 53 88 91
"`)`" (303) 2 35 36 53 88 91
"`:`" (304) 26 35
"`[`" (305) 94 96 99
"`]`" (306) 94 96 99
"invalid character" (307)
"unterminated comment" (308)
"unterminated quote" (309)
LOWER_THAN_ELSE (310)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
program_head (58)
    on left: 2, on right: 1
identifier_list (59)
    on left: 3 4, on right: 2 3 26
compound_statement (60)
    on left: 5, on right: 1 39 55
decls (61)
    on left: 6 7, on right: 1 6 39
decl (62)
    on left: 8 9 10 11 12, on right: 6
const_decl (63)
    on left: 13, on right: 9
const_definitions (64)
    on left: 14 15 16 17, on right: 13 14 16
const_definition (65)
    on left: 18, on right: 14 15
var_decl (66)
    on left: 19, on right: 8
var_expressions_semi (67)
    on left: 20 21 22 23, on right: 19 20 22 100
var_expressions (68)
    on left: 24 25, on right: 20 21 24 42
var_expression (69)
    on left: 26, on right: 24 25
type_decl (70)
    on left: 27, on right: 10
type_expressions (71)
    on left: 28 29 30 31, on right: 27 28 30
type_expression (72)
    on left: 32, on right: 28 29
subprogram_decl (73)
    on left: 33, on right: 11
subprogram (74)
    on left: 34, on right: 33
subprogram_header (75)
    on left: 35 36 37 38, on right: 34
subprogram_body (76)
    on left: 39 40 41, on right: 34
parameter_list (77)
    on left: 42 43, on right: 35 36
statement_list (78)
    on left: 44 45 46 47, on right: 5
statement_list_ (79)
    on left: 48 49 50 51, on right: 44 48 50
statement (80)
    on left: 52 53 54 55 56 57, on right: 44 45 48 49 58 59 60 61 62
if_statement (81)
    on left: 58 59, on right: 54
while_statement (82)
    on left: 60, on right: 56
for_statement (83)
    on left: 61 62, on right: 57
expression_list (84)
    on left: 63 64, on right: 53 88
expression_list_ (85)
    on left: 65 66, on right: 63 65
expression (86)
    on left: 67 68 69 70 71 72 73, on right: 52 58 59 60 61 62 65 66
    67 68 69 70 71 72 91 94 96
simple_expression (87)
    on left: 74 75 76, on right: 67 68 69 70 71 72 73 74 75
term (88)
    on left: 77 78 79 80 81 82, on right: 74 75 76 77 78 79 80 81
factor (89)
    on left: 83 84 85 86, on right: 77 78 79 80 81 82 83 84 85
lower_factor (90)
    on left: 87 88 89 90 91, on right: 86
subscripts (91)
    on left: 92 93, on right: 52 61 62 87
subscripts_ (92)
    on left: 94 95 96 97, on right: 92 94 95
type_identifier (93)
    on left: 98 99 100, on right: 26 32 99
const_expression (94)
    on left: 101 102 103 104 105, on right: 18
array_dim_expression (95)
    on left: 106 107 108 109, on right: 99
real (96)
    on left: 110 111 112, on right: 89 101 104
return_type (97)
    on left: 113, on right: 35


state 0

    0 $accept: . program "end-of-file"

    "`program`"  shift, and go to state 1

    program  go to state 2


state 1

    1 program: "`program`" . program_head decls compound_statement "`.`"

    "identifier"  shift, and go to state 3

    program_head  go to state 4


state 2

    0 $accept: program . "end-of-file"

    "end-of-file"  shift, and go to state 5


state 3

    2 program_head: "identifier" . "`(`" identifier_list "`)`" "`;`"

    "`(`"  shift, and go to state 6


state 4

    1 program: "`program`" program_head . decls compound_statement "`.`"

    $default  reduce using rule 7 (decls)

    decls  go to state 7


state 5

    0 $accept: program "end-of-file" .

    $default  accept


state 6

    2 program_head: "identifier" "`(`" . identifier_list "`)`" "`;`"

    "identifier"  shift, and go to state 8

    identifier_list  go to state 9


state 7

    1 program: "`program`" program_head decls . compound_statement "`.`"
    6 decls: decls . decl

    error          shift, and go to state 10
    "`begin`"      shift, and go to state 11
    "`const`"      shift, and go to state 12
    "`function`"   shift, and go to state 13
    "`procedure`"  shift, and go to state 14
    "`type`"       shift, and go to state 15
    "`var`"        shift, and go to state 16

    compound_statement  go to state 17
    decl                go to state 18
    const_decl          go to state 19
    var_decl            go to state 20
    type_decl           go to state 21
    subprogram_decl     go to state 22
    subprogram          go to state 23
    subprogram_header   go to state 24


state 8

    4 identifier_list: "identifier" .

    $default  reduce using rule 4 (identifier_list)


state 9

    2 program_head: "identifier" "`(`" identifier_list . "`)`" "`;`"
    3 identifier_list: identifier_list . "`,`" "identifier"

    "`,`"  shift, and go to state 25
    "`)`"  shift, and go to state 26


state 10

   12 decl: error . "`;`"

    "`;`"  shift, and go to state 27


state 11

    5 compound_statement: "`begin`" . statement_list

    error         shift, and go to state 28
    "`begin`"     shift, and go to state 11
    "`end`"       shift, and go to state 29
    "`for`"       shift, and go to state 30
    "`if`"        shift, and go to state 31
    "`while`"     shift, and go to state 32
    "identifier"  shift, and go to state 33

    compound_statement  go to state 34
    statement_list      go to state 35
    statement_list_     go to state 36
    statement           go to state 37
    if_statement        go to state 38
    while_statement     go to state 39
    for_statement       go to state 40


state 12

   13 const_decl: "`const`" . const_definitions

    error         shift, and go to state 41
    "identifier"  shift, and go to state 42

    const_definitions  go to state 43
    const_definition   go to state 44


state 13

   35 subprogram_header: "`function`" . "identifier" "`(`" parameter_list "`)`" "`:`" return_type "`;`"
   37                  | "`function`" . error "`;`"

    error         shift, and go to state 45
    "identifier"  shift, and go to state 46


state 14

   36 subprogram_header: "`procedure`" . "identifier" "`(`" parameter_list "`)`" "`;`"
   38                  | "`procedure`" . error "`;`"

    error         shift, and go to state 47
    "identifier"  shift, and go to state 48


state 15

   27 type_decl: "`type`" . type_expressions

    error         shift, and go to state 49
    "identifier"  shift, and go to state 50

    type_expressions  go to state 51
    type_expression   go to state 52


state 16

   19 var_decl: "`var`" . var_expressions_semi

    error         shift, and go to state 53
    "identifier"  shift, and go to state 8

    identifier_list       go to state 54
    var_expressions_semi  go to state 55
    var_expressions       go to state 56
    var_expression        go to state 57


state 17

    1 program: "`program`" program_head decls compound_statement . "`.`"

    "`.`"  shift, and go to state 58


state 18

    6 decls: decls decl .

    $default  reduce using rule 6 (decls)


state 19

    9 decl: const_decl .

    $default  reduce using rule 9 (decl)


state 20

    8 decl: var_decl .

    $default  reduce using rule 8 (decl)


state 21

   10 decl: type_decl .

    $default  reduce using rule 10 (decl)


state 22

   11 decl: subprogram_decl .

    $default  reduce using rule 11 (decl)


state 23

   33 subprogram_decl: subprogram .

    $default  reduce using rule 33 (subprogram_decl)


state 24

   34 subprogram: subprogram_header . subprogram_body

    error        shift, and go to state 59
    "`forward`"  shift, and go to state 60

    error          [reduce using rule 7 (decls)]
    "`begin`"      reduce using rule 7 (decls)
    "`const`"      reduce using rule 7 (decls)
    "`function`"   reduce using rule 7 (decls)
    "`procedure`"  reduce using rule 7 (decls)
    "`type`"       reduce using rule 7 (decls)
    "`var`"        reduce using rule 7 (decls)

    decls            go to state 61
    subprogram_body  go to state 62


state 25

    3 identifier_list: identifier_list "`,`" . "identifier"

    "identifier"  shift, and go to state 63


state 26

    2 program_head: "identifier" "`(`" identifier_list "`)`" . "`;`"

    "`;`"  shift, and go to state 64


state 27

   12 decl: error "`;`" .

    $default  reduce using rule 12 (decl)


state 28

   46 statement_list: error . "`end`"
   51 statement_list_: error . "`;`"

    "`end`"  shift, and go to state 65
    "`;`"    shift, and go to state 66


state 29

   47 statement_list: "`end`" .

    $default  reduce using rule 47 (statement_list)


state 30

   61 for_statement: "`for`" . "identifier" subscripts "`:=`" expression "`to`" expression "`do`" statement
   62              | "`for`" . "identifier" subscripts "`:=`" expression "`downto`" expression "`do`" statement

    "identifier"  shift, and go to state 67


state 31

   58 if_statement: "`if`" . expression "`then`" statement
   59             | "`if`" . expression "`then`" statement "`else`" statement

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    expression         go to state 77
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 32

   60 while_statement: "`while`" . expression "`do`" statement

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    expression         go to state 83
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 33

   52 statement: "identifier" . subscripts "`:=`" expression
   53          | "identifier" . "`(`" expression_list "`)`"

    "`.`"  shift, and go to state 84
    "`(`"  shift, and go to state 85
    "`[`"  shift, and go to state 86

    $default  reduce using rule 93 (subscripts)

    subscripts   go to state 87
    subscripts_  go to state 88


state 34

   55 statement: compound_statement .

    $default  reduce using rule 55 (statement)


state 35

    5 compound_statement: "`begin`" statement_list .

    $default  reduce using rule 5 (compound_statement)


state 36

   44 statement_list: statement_list_ . statement "`end`"
   48 statement_list_: statement_list_ . statement "`;`"
   50                | statement_list_ . error "`;`"

    error         shift, and go to state 89
    "`begin`"     shift, and go to state 11
    "`for`"       shift, and go to state 30
    "`if`"        shift, and go to state 31
    "`while`"     shift, and go to state 32
    "identifier"  shift, and go to state 33

    compound_statement  go to state 34
    statement           go to state 90
    if_statement        go to state 38
    while_statement     go to state 39
    for_statement       go to state 40


state 37

   45 statement_list: statement . "`end`"
   49 statement_list_: statement . "`;`"

    "`end`"  shift, and go to state 91
    "`;`"    shift, and go to state 92


state 38

   54 statement: if_statement .

    $default  reduce using rule 54 (statement)


state 39

   56 statement: while_statement .

    $default  reduce using rule 56 (statement)


state 40

   57 statement: for_statement .

    $default  reduce using rule 57 (statement)


state 41

   17 const_definitions: error . "`;`"

    "`;`"  shift, and go to state 93


state 42

   18 const_definition: "identifier" . "`=`" const_expression "`;`"

    "`=`"  shift, and go to state 94


state 43

   13 const_decl: "`const`" const_definitions .
   14 const_definitions: const_definitions . const_definition
   16                  | const_definitions . error "`;`"

    error         shift, and go to state 95
    "identifier"  shift, and go to state 42

    error          [reduce using rule 13 (const_decl)]
    "`begin`"      reduce using rule 13 (const_decl)
    "`const`"      reduce using rule 13 (const_decl)
    "`function`"   reduce using rule 13 (const_decl)
    "`procedure`"  reduce using rule 13 (const_decl)
    "`type`"       reduce using rule 13 (const_decl)
    "`var`"        reduce using rule 13 (const_decl)

    const_definition  go to state 96


state 44

   15 const_definitions: const_definition .

    $default  reduce using rule 15 (const_definitions)


state 45

   37 subprogram_header: "`function`" error . "`;`"

    "`;`"  shift, and go to state 97


state 46

   35 subprogram_header: "`function`" "identifier" . "`(`" parameter_list "`)`" "`:`" return_type "`;`"

    "`(`"  shift, and go to state 98


state 47

   38 subprogram_header: "`procedure`" error . "`;`"

    "`;`"  shift, and go to state 99


state 48

   36 subprogram_header: "`procedure`" "identifier" . "`(`" parameter_list "`)`" "`;`"

    "`(`"  shift, and go to state 100


state 49

   31 type_expressions: error . "`;`"

    "`;`"  shift, and go to state 101


state 50

   32 type_expression: "identifier" . "`=`" type_identifier "`;`"

    "`=`"  shift, and go to state 102


state 51

   27 type_decl: "`type`" type_expressions .
   28 type_expressions: type_expressions . type_expression
   30                 | type_expressions . error "`;`"

    error         shift, and go to state 103
    "identifier"  shift, and go to state 50

    error          [reduce using rule 27 (type_decl)]
    "`begin`"      reduce using rule 27 (type_decl)
    "`const`"      reduce using rule 27 (type_decl)
    "`function`"   reduce using rule 27 (type_decl)
    "`procedure`"  reduce using rule 27 (type_decl)
    "`type`"       reduce using rule 27 (type_decl)
    "`var`"        reduce using rule 27 (type_decl)

    type_expression  go to state 104


state 52

   29 type_expressions: type_expression .

    $default  reduce using rule 29 (type_expressions)


state 53

   23 var_expressions_semi: error . "`;`"

    "`;`"  shift, and go to state 105


state 54

    3 identifier_list: identifier_list . "`,`" "identifier"
   26 var_expression: identifier_list . "`:`" type_identifier

    "`,`"  shift, and go to state 25
    "`:`"  shift, and go to state 106


state 55

   19 var_decl: "`var`" var_expressions_semi .
   20 var_expressions_semi: var_expressions_semi . var_expressions "`;`"
   22                     | var_expressions_semi . error "`;`"

    error         shift, and go to state 107
    "identifier"  shift, and go to state 8

    error          [reduce using rule 19 (var_decl)]
    "`begin`"      reduce using rule 19 (var_decl)
    "`const`"      reduce using rule 19 (var_decl)
    "`function`"   reduce using rule 19 (var_decl)
    "`procedure`"  reduce using rule 19 (var_decl)
    "`type`"       reduce using rule 19 (var_decl)
    "`var`"        reduce using rule 19 (var_decl)

    identifier_list  go to state 54
    var_expressions  go to state 108
    var_expression   go to state 57


state 56

   21 var_expressions_semi: var_expressions . "`;`"
   24 var_expressions: var_expressions . "`,`" var_expression

    "`,`"  shift, and go to state 109
    "`;`"  shift, and go to state 110


state 57

   25 var_expressions: var_expression .

    $default  reduce using rule 25 (var_expressions)


state 58

    1 program: "`program`" program_head decls compound_statement "`.`" .

    $default  reduce using rule 1 (program)


state 59

   41 subprogram_body: error . "`;`"

    "`;`"  shift, and go to state 111


state 60

   40 subprogram_body: "`forward`" . "`;`"

    "`;`"  shift, and go to state 112


state 61

    6 decls: decls . decl
   39 subprogram_body: decls . compound_statement "`;`"

    error          shift, and go to state 10
    "`begin`"      shift, and go to state 11
    "`const`"      shift, and go to state 12
    "`function`"   shift, and go to state 13
    "`procedure`"  shift, and go to state 14
    "`type`"       shift, and go to state 15
    "`var`"        shift, and go to state 16

    compound_statement  go to state 113
    decl                go to state 18
    const_decl          go to state 19
    var_decl            go to state 20
    type_decl           go to state 21
    subprogram_decl     go to state 22
    subprogram          go to state 23
    subprogram_header   go to state 24


state 62

   34 subprogram: subprogram_header subprogram_body .

    $default  reduce using rule 34 (subprogram)


state 63

    3 identifier_list: identifier_list "`,`" "identifier" .

    $default  reduce using rule 3 (identifier_list)


state 64

    2 program_head: "identifier" "`(`" identifier_list "`)`" "`;`" .

    $default  reduce using rule 2 (program_head)


state 65

   46 statement_list: error "`end`" .

    $default  reduce using rule 46 (statement_list)


state 66

   51 statement_list_: error "`;`" .

    $default  reduce using rule 51 (statement_list_)


state 67

   61 for_statement: "`for`" "identifier" . subscripts "`:=`" expression "`to`" expression "`do`" statement
   62              | "`for`" "identifier" . subscripts "`:=`" expression "`downto`" expression "`do`" statement

    "`.`"  shift, and go to state 84
    "`[`"  shift, and go to state 86

    $default  reduce using rule 93 (subscripts)

    subscripts   go to state 114
    subscripts_  go to state 88


state 68

   85 factor: "`not`" . factor

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    factor        go to state 115
    lower_factor  go to state 81
    real          go to state 82


state 69

   87 lower_factor: "identifier" . subscripts
   88             | "identifier" . "`(`" expression_list "`)`"

    "`.`"  shift, and go to state 84
    "`(`"  shift, and go to state 116
    "`[`"  shift, and go to state 86

    $default  reduce using rule 93 (subscripts)

    subscripts   go to state 117
    subscripts_  go to state 88


state 70

   90 lower_factor: "string literal" .

    $default  reduce using rule 90 (lower_factor)


state 71

  110 real: "integer literal" .

    $default  reduce using rule 110 (real)


state 72

  111 real: "real decimal literal" .

    $default  reduce using rule 111 (real)


state 73

  112 real: "real exp literal" .

    $default  reduce using rule 112 (real)


state 74

   83 factor: "`+`" . factor

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    factor        go to state 118
    lower_factor  go to state 81
    real          go to state 82


state 75

   84 factor: "`-`" . factor

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    factor        go to state 119
    lower_factor  go to state 81
    real          go to state 82


state 76

   91 lower_factor: "`(`" . expression "`)`"

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    expression         go to state 120
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 77

   58 if_statement: "`if`" expression . "`then`" statement
   59             | "`if`" expression . "`then`" statement "`else`" statement
   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression

    "`then`"  shift, and go to state 121
    "`=`"     shift, and go to state 122
    "`<>`"    shift, and go to state 123
    "`>=`"    shift, and go to state 124
    "`>`"     shift, and go to state 125
    "`<`"     shift, and go to state 126
    "`<=`"    shift, and go to state 127


state 78

   73 expression: simple_expression .
   74 simple_expression: simple_expression . "`+`" term
   75                  | simple_expression . "`-`" term

    "`+`"  shift, and go to state 128
    "`-`"  shift, and go to state 129

    $default  reduce using rule 73 (expression)


state 79

   76 simple_expression: term .
   77 term: term . "`*`" factor
   78     | term . "`/`" factor
   79     | term . "`div`" factor
   80     | term . "`mod`" factor
   81     | term . "`and`" factor

    "`and`"  shift, and go to state 130
    "`div`"  shift, and go to state 131
    "`mod`"  shift, and go to state 132
    "`*`"    shift, and go to state 133
    "`/`"    shift, and go to state 134

    $default  reduce using rule 76 (simple_expression)


state 80

   82 term: factor .

    $default  reduce using rule 82 (term)


state 81

   86 factor: lower_factor .

    $default  reduce using rule 86 (factor)


state 82

   89 lower_factor: real .

    $default  reduce using rule 89 (lower_factor)


state 83

   60 while_statement: "`while`" expression . "`do`" statement
   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression

    "`do`"  shift, and go to state 135
    "`=`"   shift, and go to state 122
    "`<>`"  shift, and go to state 123
    "`>=`"  shift, and go to state 124
    "`>`"   shift, and go to state 125
    "`<`"   shift, and go to state 126
    "`<=`"  shift, and go to state 127


state 84

   97 subscripts_: "`.`" . "identifier"

    "identifier"  shift, and go to state 136


state 85

   53 statement: "identifier" "`(`" . expression_list "`)`"

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    $default  reduce using rule 64 (expression_list)

    expression_list    go to state 137
    expression_list_   go to state 138
    expression         go to state 139
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 86

   96 subscripts_: "`[`" . expression "`]`"

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    expression         go to state 140
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 87

   52 statement: "identifier" subscripts . "`:=`" expression

    "`:=`"  shift, and go to state 141


state 88

   92 subscripts: subscripts_ .
   94 subscripts_: subscripts_ . "`[`" expression "`]`"
   95            | subscripts_ . "`.`" "identifier"

    "`.`"  shift, and go to state 142
    "`[`"  shift, and go to state 143

    $default  reduce using rule 92 (subscripts)


state 89

   50 statement_list_: statement_list_ error . "`;`"

    "`;`"  shift, and go to state 144


state 90

   44 statement_list: statement_list_ statement . "`end`"
   48 statement_list_: statement_list_ statement . "`;`"

    "`end`"  shift, and go to state 145
    "`;`"    shift, and go to state 146


state 91

   45 statement_list: statement "`end`" .

    $default  reduce using rule 45 (statement_list)


state 92

   49 statement_list_: statement "`;`" .

    $default  reduce using rule 49 (statement_list_)


state 93

   17 const_definitions: error "`;`" .

    $default  reduce using rule 17 (const_definitions)


state 94

   18 const_definition: "identifier" "`=`" . const_expression "`;`"

    "identifier"            shift, and go to state 147
    "string literal"        shift, and go to state 148
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`-`"                   shift, and go to state 149

    const_expression  go to state 150
    real              go to state 151


state 95

   16 const_definitions: const_definitions error . "`;`"

    "`;`"  shift, and go to state 152


state 96

   14 const_definitions: const_definitions const_definition .

    $default  reduce using rule 14 (const_definitions)


state 97

   37 subprogram_header: "`function`" error "`;`" .

    $default  reduce using rule 37 (subprogram_header)


state 98

   35 subprogram_header: "`function`" "identifier" "`(`" . parameter_list "`)`" "`:`" return_type "`;`"

    "identifier"  shift, and go to state 8

    $default  reduce using rule 43 (parameter_list)

    identifier_list  go to state 54
    var_expressions  go to state 153
    var_expression   go to state 57
    parameter_list   go to state 154


state 99

   38 subprogram_header: "`procedure`" error "`;`" .

    $default  reduce using rule 38 (subprogram_header)


state 100

   36 subprogram_header: "`procedure`" "identifier" "`(`" . parameter_list "`)`" "`;`"

    "identifier"  shift, and go to state 8

    $default  reduce using rule 43 (parameter_list)

    identifier_list  go to state 54
    var_expressions  go to state 153
    var_expression   go to state 57
    parameter_list   go to state 155


state 101

   31 type_expressions: error "`;`" .

    $default  reduce using rule 31 (type_expressions)


state 102

   32 type_expression: "identifier" "`=`" . type_identifier "`;`"

    "`array`"     shift, and go to state 156
    "`record`"    shift, and go to state 157
    "identifier"  shift, and go to state 158

    type_identifier  go to state 159


state 103

   30 type_expressions: type_expressions error . "`;`"

    "`;`"  shift, and go to state 160


state 104

   28 type_expressions: type_expressions type_expression .

    $default  reduce using rule 28 (type_expressions)


state 105

   23 var_expressions_semi: error "`;`" .

    $default  reduce using rule 23 (var_expressions_semi)


state 106

   26 var_expression: identifier_list "`:`" . type_identifier

    "`array`"     shift, and go to state 156
    "`record`"    shift, and go to state 157
    "identifier"  shift, and go to state 158

    type_identifier  go to state 161


state 107

   22 var_expressions_semi: var_expressions_semi error . "`;`"

    "`;`"  shift, and go to state 162


state 108

   20 var_expressions_semi: var_expressions_semi var_expressions . "`;`"
   24 var_expressions: var_expressions . "`,`" var_expression

    "`,`"  shift, and go to state 109
    "`;`"  shift, and go to state 163


state 109

   24 var_expressions: var_expressions "`,`" . var_expression

    "identifier"  shift, and go to state 8

    identifier_list  go to state 54
    var_expression   go to state 164


state 110

   21 var_expressions_semi: var_expressions "`;`" .

    $default  reduce using rule 21 (var_expressions_semi)


state 111

   41 subprogram_body: error "`;`" .

    $default  reduce using rule 41 (subprogram_body)


state 112

   40 subprogram_body: "`forward`" "`;`" .

    $default  reduce using rule 40 (subprogram_body)


state 113

   39 subprogram_body: decls compound_statement . "`;`"

    "`;`"  shift, and go to state 165


state 114

   61 for_statement: "`for`" "identifier" subscripts . "`:=`" expression "`to`" expression "`do`" statement
   62              | "`for`" "identifier" subscripts . "`:=`" expression "`downto`" expression "`do`" statement

    "`:=`"  shift, and go to state 166


state 115

   85 factor: "`not`" factor .

    $default  reduce using rule 85 (factor)


state 116

   88 lower_factor: "identifier" "`(`" . expression_list "`)`"

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    $default  reduce using rule 64 (expression_list)

    expression_list    go to state 167
    expression_list_   go to state 138
    expression         go to state 139
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 117

   87 lower_factor: "identifier" subscripts .

    $default  reduce using rule 87 (lower_factor)


state 118

   83 factor: "`+`" factor .

    $default  reduce using rule 83 (factor)


state 119

   84 factor: "`-`" factor .

    $default  reduce using rule 84 (factor)


state 120

   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression
   91 lower_factor: "`(`" expression . "`)`"

    "`=`"   shift, and go to state 122
    "`<>`"  shift, and go to state 123
    "`>=`"  shift, and go to state 124
    "`>`"   shift, and go to state 125
    "`<`"   shift, and go to state 126
    "`<=`"  shift, and go to state 127
    "`)`"   shift, and go to state 168


state 121

   58 if_statement: "`if`" expression "`then`" . statement
   59             | "`if`" expression "`then`" . statement "`else`" statement

    "`begin`"     shift, and go to state 11
    "`for`"       shift, and go to state 30
    "`if`"        shift, and go to state 31
    "`while`"     shift, and go to state 32
    "identifier"  shift, and go to state 33

    compound_statement  go to state 34
    statement           go to state 169
    if_statement        go to state 38
    while_statement     go to state 39
    for_statement       go to state 40


state 122

   67 expression: expression "`=`" . simple_expression

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    simple_expression  go to state 170
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 123

   68 expression: expression "`<>`" . simple_expression

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    simple_expression  go to state 171
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 124

   69 expression: expression "`>=`" . simple_expression

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    simple_expression  go to state 172
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 125

   70 expression: expression "`>`" . simple_expression

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    simple_expression  go to state 173
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 126

   72 expression: expression "`<`" . simple_expression

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    simple_expression  go to state 174
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 127

   71 expression: expression "`<=`" . simple_expression

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    simple_expression  go to state 175
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 128

   74 simple_expression: simple_expression "`+`" . term

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    term          go to state 176
    factor        go to state 80
    lower_factor  go to state 81
    real          go to state 82


state 129

   75 simple_expression: simple_expression "`-`" . term

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    term          go to state 177
    factor        go to state 80
    lower_factor  go to state 81
    real          go to state 82


state 130

   81 term: term "`and`" . factor

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    factor        go to state 178
    lower_factor  go to state 81
    real          go to state 82


state 131

   79 term: term "`div`" . factor

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    factor        go to state 179
    lower_factor  go to state 81
    real          go to state 82


state 132

   80 term: term "`mod`" . factor

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    factor        go to state 180
    lower_factor  go to state 81
    real          go to state 82


state 133

   77 term: term "`*`" . factor

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    factor        go to state 181
    lower_factor  go to state 81
    real          go to state 82


state 134

   78 term: term "`/`" . factor

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    factor        go to state 182
    lower_factor  go to state 81
    real          go to state 82


state 135

   60 while_statement: "`while`" expression "`do`" . statement

    "`begin`"     shift, and go to state 11
    "`for`"       shift, and go to state 30
    "`if`"        shift, and go to state 31
    "`while`"     shift, and go to state 32
    "identifier"  shift, and go to state 33

    compound_statement  go to state 34
    statement           go to state 183
    if_statement        go to state 38
    while_statement     go to state 39
    for_statement       go to state 40


state 136

   97 subscripts_: "`.`" "identifier" .

    $default  reduce using rule 97 (subscripts_)


state 137

   53 statement: "identifier" "`(`" expression_list . "`)`"

    "`)`"  shift, and go to state 184


state 138

   63 expression_list: expression_list_ .
   65 expression_list_: expression_list_ . "`,`" expression

    "`,`"  shift, and go to state 185

    $default  reduce using rule 63 (expression_list)


state 139

   66 expression_list_: expression .
   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression

    "`=`"   shift, and go to state 122
    "`<>`"  shift, and go to state 123
    "`>=`"  shift, and go to state 124
    "`>`"   shift, and go to state 125
    "`<`"   shift, and go to state 126
    "`<=`"  shift, and go to state 127

    $default  reduce using rule 66 (expression_list_)


state 140

   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression
   96 subscripts_: "`[`" expression . "`]`"

    "`=`"   shift, and go to state 122
    "`<>`"  shift, and go to state 123
    "`>=`"  shift, and go to state 124
    "`>`"   shift, and go to state 125
    "`<`"   shift, and go to state 126
    "`<=`"  shift, and go to state 127
    "`]`"   shift, and go to state 186


state 141

   52 statement: "identifier" subscripts "`:=`" . expression

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    expression         go to state 187
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 142

   95 subscripts_: subscripts_ "`.`" . "identifier"

    "identifier"  shift, and go to state 188


state 143

   94 subscripts_: subscripts_ "`[`" . expression "`]`"

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    expression         go to state 189
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 144

   50 statement_list_: statement_list_ error "`;`" .

    $default  reduce using rule 50 (statement_list_)


state 145

   44 statement_list: statement_list_ statement "`end`" .

    $default  reduce using rule 44 (statement_list)


state 146

   48 statement_list_: statement_list_ statement "`;`" .

    $default  reduce using rule 48 (statement_list_)


state 147

  102 const_expression: "identifier" .

    $default  reduce using rule 102 (const_expression)


state 148

  103 const_expression: "string literal" .

    $default  reduce using rule 103 (const_expression)


state 149

  104 const_expression: "`-`" . real
  105                 | "`-`" . "identifier"

    "identifier"            shift, and go to state 190
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73

    real  go to state 191


state 150

   18 const_definition: "identifier" "`=`" const_expression . "`;`"

    "`;`"  shift, and go to state 192


state 151

  101 const_expression: real .

    $default  reduce using rule 101 (const_expression)


state 152

   16 const_definitions: const_definitions error "`;`" .

    $default  reduce using rule 16 (const_definitions)


state 153

   24 var_expressions: var_expressions . "`,`" var_expression
   42 parameter_list: var_expressions .

    "`,`"  shift, and go to state 109

    $default  reduce using rule 42 (parameter_list)


state 154

   35 subprogram_header: "`function`" "identifier" "`(`" parameter_list . "`)`" "`:`" return_type "`;`"

    "`)`"  shift, and go to state 193


state 155

   36 subprogram_header: "`procedure`" "identifier" "`(`" parameter_list . "`)`" "`;`"

    "`)`"  shift, and go to state 194


state 156

   99 type_identifier: "`array`" . "`[`" array_dim_expression "`..`" array_dim_expression "`]`" "`of`" type_identifier

    "`[`"  shift, and go to state 195


state 157

  100 type_identifier: "`record`" . var_expressions_semi "`end`"

    error         shift, and go to state 53
    "identifier"  shift, and go to state 8

    identifier_list       go to state 54
    var_expressions_semi  go to state 196
    var_expressions       go to state 56
    var_expression        go to state 57


state 158

   98 type_identifier: "identifier" .

    $default  reduce using rule 98 (type_identifier)


state 159

   32 type_expression: "identifier" "`=`" type_identifier . "`;`"

    "`;`"  shift, and go to state 197


state 160

   30 type_expressions: type_expressions error "`;`" .

    $default  reduce using rule 30 (type_expressions)


state 161

   26 var_expression: identifier_list "`:`" type_identifier .

    $default  reduce using rule 26 (var_expression)


state 162

   22 var_expressions_semi: var_expressions_semi error "`;`" .

    $default  reduce using rule 22 (var_expressions_semi)


state 163

   20 var_expressions_semi: var_expressions_semi var_expressions "`;`" .

    $default  reduce using rule 20 (var_expressions_semi)


state 164

   24 var_expressions: var_expressions "`,`" var_expression .

    $default  reduce using rule 24 (var_expressions)


state 165

   39 subprogram_body: decls compound_statement "`;`" .

    $default  reduce using rule 39 (subprogram_body)


state 166

   61 for_statement: "`for`" "identifier" subscripts "`:=`" . expression "`to`" expression "`do`" statement
   62              | "`for`" "identifier" subscripts "`:=`" . expression "`downto`" expression "`do`" statement

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    expression         go to state 198
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 167

   88 lower_factor: "identifier" "`(`" expression_list . "`)`"

    "`)`"  shift, and go to state 199


state 168

   91 lower_factor: "`(`" expression "`)`" .

    $default  reduce using rule 91 (lower_factor)


state 169

   58 if_statement: "`if`" expression "`then`" statement .
   59             | "`if`" expression "`then`" statement . "`else`" statement

    "`else`"  shift, and go to state 200

    $default  reduce using rule 58 (if_statement)


state 170

   67 expression: expression "`=`" simple_expression .
   74 simple_expression: simple_expression . "`+`" term
   75                  | simple_expression . "`-`" term

    "`+`"  shift, and go to state 128
    "`-`"  shift, and go to state 129

    $default  reduce using rule 67 (expression)


state 171

   68 expression: expression "`<>`" simple_expression .
   74 simple_expression: simple_expression . "`+`" term
   75                  | simple_expression . "`-`" term

    "`+`"  shift, and go to state 128
    "`-`"  shift, and go to state 129

    $default  reduce using rule 68 (expression)


state 172

   69 expression: expression "`>=`" simple_expression .
   74 simple_expression: simple_expression . "`+`" term
   75                  | simple_expression . "`-`" term

    "`+`"  shift, and go to state 128
    "`-`"  shift, and go to state 129

    $default  reduce using rule 69 (expression)


state 173

   70 expression: expression "`>`" simple_expression .
   74 simple_expression: simple_expression . "`+`" term
   75                  | simple_expression . "`-`" term

    "`+`"  shift, and go to state 128
    "`-`"  shift, and go to state 129

    $default  reduce using rule 70 (expression)


state 174

   72 expression: expression "`<`" simple_expression .
   74 simple_expression: simple_expression . "`+`" term
   75                  | simple_expression . "`-`" term

    "`+`"  shift, and go to state 128
    "`-`"  shift, and go to state 129

    $default  reduce using rule 72 (expression)


state 175

   71 expression: expression "`<=`" simple_expression .
   74 simple_expression: simple_expression . "`+`" term
   75                  | simple_expression . "`-`" term

    "`+`"  shift, and go to state 128
    "`-`"  shift, and go to state 129

    $default  reduce using rule 71 (expression)


state 176

   74 simple_expression: simple_expression "`+`" term .
   77 term: term . "`*`" factor
   78     | term . "`/`" factor
   79     | term . "`div`" factor
   80     | term . "`mod`" factor
   81     | term . "`and`" factor

    "`and`"  shift, and go to state 130
    "`div`"  shift, and go to state 131
    "`mod`"  shift, and go to state 132
    "`*`"    shift, and go to state 133
    "`/`"    shift, and go to state 134

    $default  reduce using rule 74 (simple_expression)


state 177

   75 simple_expression: simple_expression "`-`" term .
   77 term: term . "`*`" factor
   78     | term . "`/`" factor
   79     | term . "`div`" factor
   80     | term . "`mod`" factor
   81     | term . "`and`" factor

    "`and`"  shift, and go to state 130
    "`div`"  shift, and go to state 131
    "`mod`"  shift, and go to state 132
    "`*`"    shift, and go to state 133
    "`/`"    shift, and go to state 134

    $default  reduce using rule 75 (simple_expression)


state 178

   81 term: term "`and`" factor .

    $default  reduce using rule 81 (term)


state 179

   79 term: term "`div`" factor .

    $default  reduce using rule 79 (term)


state 180

   80 term: term "`mod`" factor .

    $default  reduce using rule 80 (term)


state 181

   77 term: term "`*`" factor .

    $default  reduce using rule 77 (term)


state 182

   78 term: term "`/`" factor .

    $default  reduce using rule 78 (term)


state 183

   60 while_statement: "`while`" expression "`do`" statement .

    $default  reduce using rule 60 (while_statement)


state 184

   53 statement: "identifier" "`(`" expression_list "`)`" .

    $default  reduce using rule 53 (statement)


state 185

   65 expression_list_: expression_list_ "`,`" . expression

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    expression         go to state 201
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 186

   96 subscripts_: "`[`" expression "`]`" .

    $default  reduce using rule 96 (subscripts_)


state 187

   52 statement: "identifier" subscripts "`:=`" expression .
   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression

    "`=`"   shift, and go to state 122
    "`<>`"  shift, and go to state 123
    "`>=`"  shift, and go to state 124
    "`>`"   shift, and go to state 125
    "`<`"   shift, and go to state 126
    "`<=`"  shift, and go to state 127

    $default  reduce using rule 52 (statement)


state 188

   95 subscripts_: subscripts_ "`.`" "identifier" .

    $default  reduce using rule 95 (subscripts_)


state 189

   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression
   94 subscripts_: subscripts_ "`[`" expression . "`]`"

    "`=`"   shift, and go to state 122
    "`<>`"  shift, and go to state 123
    "`>=`"  shift, and go to state 124
    "`>`"   shift, and go to state 125
    "`<`"   shift, and go to state 126
    "`<=`"  shift, and go to state 127
    "`]`"   shift, and go to state 202


state 190

  105 const_expression: "`-`" "identifier" .

    $default  reduce using rule 105 (const_expression)


state 191

  104 const_expression: "`-`" real .

    $default  reduce using rule 104 (const_expression)


state 192

   18 const_definition: "identifier" "`=`" const_expression "`;`" .

    $default  reduce using rule 18 (const_definition)


state 193

   35 subprogram_header: "`function`" "identifier" "`(`" parameter_list "`)`" . "`:`" return_type "`;`"

    "`:`"  shift, and go to state 203


state 194

   36 subprogram_header: "`procedure`" "identifier" "`(`" parameter_list "`)`" . "`;`"

    "`;`"  shift, and go to state 204


state 195

   99 type_identifier: "`array`" "`[`" . array_dim_expression "`..`" array_dim_expression "`]`" "`of`" type_identifier

    "identifier"       shift, and go to state 205
    "integer literal"  shift, and go to state 206
    "`-`"              shift, and go to state 207

    array_dim_expression  go to state 208


state 196

   20 var_expressions_semi: var_expressions_semi . var_expressions "`;`"
   22                     | var_expressions_semi . error "`;`"
  100 type_identifier: "`record`" var_expressions_semi . "`end`"

    error         shift, and go to state 107
    "`end`"       shift, and go to state 209
    "identifier"  shift, and go to state 8

    identifier_list  go to state 54
    var_expressions  go to state 108
    var_expression   go to state 57


state 197

   32 type_expression: "identifier" "`=`" type_identifier "`;`" .

    $default  reduce using rule 32 (type_expression)


state 198

   61 for_statement: "`for`" "identifier" subscripts "`:=`" expression . "`to`" expression "`do`" statement
   62              | "`for`" "identifier" subscripts "`:=`" expression . "`downto`" expression "`do`" statement
   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression

    "`downto`"  shift, and go to state 210
    "`to`"      shift, and go to state 211
    "`=`"       shift, and go to state 122
    "`<>`"      shift, and go to state 123
    "`>=`"      shift, and go to state 124
    "`>`"       shift, and go to state 125
    "`<`"       shift, and go to state 126
    "`<=`"      shift, and go to state 127


state 199

   88 lower_factor: "identifier" "`(`" expression_list "`)`" .

    $default  reduce using rule 88 (lower_factor)


state 200

   59 if_statement: "`if`" expression "`then`" statement "`else`" . statement

    "`begin`"     shift, and go to state 11
    "`for`"       shift, and go to state 30
    "`if`"        shift, and go to state 31
    "`while`"     shift, and go to state 32
    "identifier"  shift, and go to state 33

    compound_statement  go to state 34
    statement           go to state 212
    if_statement        go to state 38
    while_statement     go to state 39
    for_statement       go to state 40


state 201

   65 expression_list_: expression_list_ "`,`" expression .
   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression

    "`=`"   shift, and go to state 122
    "`<>`"  shift, and go to state 123
    "`>=`"  shift, and go to state 124
    "`>`"   shift, and go to state 125
    "`<`"   shift, and go to state 126
    "`<=`"  shift, and go to state 127

    $default  reduce using rule 65 (expression_list_)


state 202

   94 subscripts_: subscripts_ "`[`" expression "`]`" .

    $default  reduce using rule 94 (subscripts_)


state 203

   35 subprogram_header: "`function`" "identifier" "`(`" parameter_list "`)`" "`:`" . return_type "`;`"

    "identifier"  shift, and go to state 213

    return_type  go to state 214


state 204

   36 subprogram_header: "`procedure`" "identifier" "`(`" parameter_list "`)`" "`;`" .

    $default  reduce using rule 36 (subprogram_header)


state 205

  107 array_dim_expression: "identifier" .

    $default  reduce using rule 107 (array_dim_expression)


state 206

  106 array_dim_expression: "integer literal" .

    $default  reduce using rule 106 (array_dim_expression)


state 207

  108 array_dim_expression: "`-`" . "integer literal"
  109                     | "`-`" . "identifier"

    "identifier"       shift, and go to state 215
    "integer literal"  shift, and go to state 216


state 208

   99 type_identifier: "`array`" "`[`" array_dim_expression . "`..`" array_dim_expression "`]`" "`of`" type_identifier

    "`..`"  shift, and go to state 217


state 209

  100 type_identifier: "`record`" var_expressions_semi "`end`" .

    $default  reduce using rule 100 (type_identifier)


state 210

   62 for_statement: "`for`" "identifier" subscripts "`:=`" expression "`downto`" . expression "`do`" statement

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    expression         go to state 218
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 211

   61 for_statement: "`for`" "identifier" subscripts "`:=`" expression "`to`" . expression "`do`" statement

    "`not`"                 shift, and go to state 68
    "identifier"            shift, and go to state 69
    "string literal"        shift, and go to state 70
    "integer literal"       shift, and go to state 71
    "real decimal literal"  shift, and go to state 72
    "real exp literal"      shift, and go to state 73
    "`+`"                   shift, and go to state 74
    "`-`"                   shift, and go to state 75
    "`(`"                   shift, and go to state 76

    expression         go to state 219
    simple_expression  go to state 78
    term               go to state 79
    factor             go to state 80
    lower_factor       go to state 81
    real               go to state 82


state 212

   59 if_statement: "`if`" expression "`then`" statement "`else`" statement .

    $default  reduce using rule 59 (if_statement)


state 213

  113 return_type: "identifier" .

    $default  reduce using rule 113 (return_type)


state 214

   35 subprogram_header: "`function`" "identifier" "`(`" parameter_list "`)`" "`:`" return_type . "`;`"

    "`;`"  shift, and go to state 220


state 215

  109 array_dim_expression: "`-`" "identifier" .

    $default  reduce using rule 109 (array_dim_expression)


state 216

  108 array_dim_expression: "`-`" "integer literal" .

    $default  reduce using rule 108 (array_dim_expression)


state 217

   99 type_identifier: "`array`" "`[`" array_dim_expression "`..`" . array_dim_expression "`]`" "`of`" type_identifier

    "identifier"       shift, and go to state 205
    "integer literal"  shift, and go to state 206
    "`-`"              shift, and go to state 207

    array_dim_expression  go to state 221


state 218

   62 for_statement: "`for`" "identifier" subscripts "`:=`" expression "`downto`" expression . "`do`" statement
   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression

    "`do`"  shift, and go to state 222
    "`=`"   shift, and go to state 122
    "`<>`"  shift, and go to state 123
    "`>=`"  shift, and go to state 124
    "`>`"   shift, and go to state 125
    "`<`"   shift, and go to state 126
    "`<=`"  shift, and go to state 127


state 219

   61 for_statement: "`for`" "identifier" subscripts "`:=`" expression "`to`" expression . "`do`" statement
   67 expression: expression . "`=`" simple_expression
   68           | expression . "`<>`" simple_expression
   69           | expression . "`>=`" simple_expression
   70           | expression . "`>`" simple_expression
   71           | expression . "`<=`" simple_expression
   72           | expression . "`<`" simple_expression

    "`do`"  shift, and go to state 223
    "`=`"   shift, and go to state 122
    "`<>`"  shift, and go to state 123
    "`>=`"  shift, and go to state 124
    "`>`"   shift, and go to state 125
    "`<`"   shift, and go to state 126
    "`<=`"  shift, and go to state 127


state 220

   35 subprogram_header: "`function`" "identifier" "`(`" parameter_list "`)`" "`:`" return_type "`;`" .

    $default  reduce using rule 35 (subprogram_header)


state 221

   99 type_identifier: "`array`" "`[`" array_dim_expression "`..`" array_dim_expression . "`]`" "`of`" type_identifier

    "`]`"  shift, and go to state 224


state 222

   62 for_statement: "`for`" "identifier" subscripts "`:=`" expression "`downto`" expression "`do`" . statement

    "`begin`"     shift, and go to state 11
    "`for`"       shift, and go to state 30
    "`if`"        shift, and go to state 31
    "`while`"     shift, and go to state 32
    "identifier"  shift, and go to state 33

    compound_statement  go to state 34
    statement           go to state 225
    if_statement        go to state 38
    while_statement     go to state 39
    for_statement       go to state 40


state 223

   61 for_statement: "`for`" "identifier" subscripts "`:=`" expression "`to`" expression "`do`" . statement

    "`begin`"     shift, and go to state 11
    "`for`"       shift, and go to state 30
    "`if`"        shift, and go to state 31
    "`while`"     shift, and go to state 32
    "identifier"  shift, and go to state 33

    compound_statement  go to state 34
    statement           go to state 226
    if_statement        go to state 38
    while_statement     go to state 39
    for_statement       go to state 40


state 224

   99 type_identifier: "`array`" "`[`" array_dim_expression "`..`" array_dim_expression "`]`" . "`of`" type_identifier

    "`of`"  shift, and go to state 227


state 225

   62 for_statement: "`for`" "identifier" subscripts "`:=`" expression "`downto`" expression "`do`" statement .

    $default  reduce using rule 62 (for_statement)


state 226

   61 for_statement: "`for`" "identifier" subscripts "`:=`" expression "`to`" expression "`do`" statement .

    $default  reduce using rule 61 (for_statement)


state 227

   99 type_identifier: "`array`" "`[`" array_dim_expression "`..`" array_dim_expression "`]`" "`of`" . type_identifier

    "`array`"     shift, and go to state 156
    "`record`"    shift, and go to state 157
    "identifier"  shift, and go to state 158

    type_identifier  go to state 228


state 228

   99 type_identifier: "`array`" "`[`" array_dim_expression "`..`" array_dim_expression "`]`" "`of`" type_identifier .

    $default  reduce using rule 99 (type_identifier)
