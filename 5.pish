program ErrorFIVE ( input, output );

    function foo(x : integer) : integer; forward;
    function foo(x : real) : integer; forward; { Error: redefinition -- no overloading in this language. Error and ignore. }
    
    function foo(x : real) : integer; { Error: Definition here differs from forward declaration }
    begin
    
    end;
    
    var x : real;
    var point2d : array [ 1 .. 2 ] of integer;
    var point3d : array [ 1 .. 3 ] of integer;
begin
    point3d[0] := 1;
    point3d[1] := '2'; { Error: Incompatible types for assignment. Integer cannot accept string literals. }
    point3d[2] := 3;
    point2d := point3d; { Error: Incompatible types for assignment. Cannot fit larger array in a smaller one. }
    point3d := point2d; { But this is valid. }
    
    foo('hello world'); { Error: Invalid argument types }
    foo(1, 2, 3); { Error: too many arguments }
    foo := 8; { Error: attempt to assign return value of foo outside of its own body scope }
    
    x := foo; { Error : forgot arguments to function call }
    x := foo(foo(1)); { this is okay }
    
    if x then x := x; { Real as while loop conditional is bad. }
    while x do x := x; { Real as while loop conditional is bad. }
    for x := 1 to 3 do writereal(x) { Real in for loop is bad. }
end.
